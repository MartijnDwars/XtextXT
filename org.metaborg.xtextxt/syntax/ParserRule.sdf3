module ParserRule

imports
  
  Common
  
context-free syntax
  
  Rule.ParserRule = ID Returns ":"
    Token
  ";"
  
  Returns.None       =
  Returns.Returns    = "returns" TypeRef
  
  TypeRef.MetaModel  = ID '::' ID
  TypeRef.Classifier = ID
  
  Token          = '(' Token ')' {bracket}
  Token.Alt      = Token '|' Token {right}
  Token.Set      = Token '&' Token {right}
  Token.Group    = Token Token {right}
  Token.Optional = Token "?"
  Token.Multiple = Token "+"
  Token.Any      = Token "*"
  Token          = Terminal
  
  Terminal.Assign  = ID Operator Terminal
  Terminal.Keyword = STRING
  Terminal.Call    = ID
  Terminal.XRef    = "[" ID "]"
  
  Operator.EqualsAssign = "="
  Operator.ListAssign   = "+="
  Operator.BoolAssign   = "?=" 

context-free priorities

  {Token.Optional Token.Multiple Token.Any}
> Token.Group
> Token.Set
> Token.Alt
