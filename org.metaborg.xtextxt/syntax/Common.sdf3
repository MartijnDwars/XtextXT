module Common

lexical syntax

	ID             = "^"? [a-zA-Z\_] [a-zA-Z0-9\_]*
	
	STRING         = "\"" StringChar* "\"" 
	StringChar     = ~[\"\n] 
	StringChar     = "\\\"" 
	StringChar     = BackSlashChar 
	BackSlashChar  = "\\"
	 
	LAYOUT         = [\ \t\n\r] 
	CommentChar    = [\*] 
	LAYOUT         = "/*" InsideComment* "*/" 
	InsideComment  = ~[\*] 
	InsideComment  = CommentChar 
	LAYOUT         = "//" ~[\n\r]* NewLineEOF 
	NewLineEOF     = [\n\r] 
	NewLineEOF     = EOF 
	EOF            =  
	
	// Reserved keywords
	
	ID = "terminal" {reject}

lexical restrictions

	// Ensure greedy matching for lexicals
	
	CommentChar   -/- [\/]
	ID            -/- [a-zA-Z0-9\_]
	
	// EOF may not be followed by any char
	
	EOF           -/- ~[]
	
	// Backslash chars in strings may not be followed by " 
	
	BackSlashChar -/- [\"]

context-free restrictions

	// Ensure greedy matching for comments
	
	LAYOUT? -/- [\ \t\n\r]
	LAYOUT? -/- [\/].[\/]
	LAYOUT? -/- [\/].[\*]

context-free syntax

	// Cardinality is used by terminal rules and parser rules
	
	Cardinality.Optional = <?>
	Cardinality.Multiple = <+>
	Cardinality.Any = <*>
